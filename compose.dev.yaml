services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    image: backend-dev
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-people}
      - POSTGRES_PORT=5432
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET:-ACCESS_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET:-REFRESH_SECRET}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
    ports:
      - ${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}
    volumes:
      - ./backend:/app

  postgres:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-people}
    image: postgres:alpine
    ports: 
      - 5432:5432
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - BACKEND_PORT=${BACKEND_PORT:-8000}
      - FRONTEND_PORT=${FRONTEND_PORT:-5173}
    image: frontend-dev
    ports: 
      - ${FRONTEND_PORT:-5173}:${FRONTEND_PORT:-5173}

volumes:
  db-data:
