components:
  schemas:
    Tokens:
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken

    FollowStatus:
      properties:
        isFollowing:
          type: boolean
          x-oapi-codegen-extra-tags:
            db: is_following
        isFollowed:
          type: boolean
          x-oapi-codegen-extra-tags:
            db: is_followed
      required:
        - isFollowing
        - isFollowed

    User:
      properties:
        id:
          type: integer
          x-go-name: ID
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: user_id
          x-go-json-ignore: true
        handle:
          type: string
          x-oapi-codegen-extra-tags:
            db: handle
        following:
          type: integer
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: following
            fake: skip
        followers:
          type: integer
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: followers
            fake: skip
        status:
          $ref: '#/components/schemas/FollowStatus'
      required:
        - id
        - handle
        - following
        - followers

    Users:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/HandlePaginationMeta'
      x-go-type: PaginatedResults[User, string]
      required:
        - data

    AuthUser:
      properties:
        handle:
          type: string
          minLength: 5
          maxLength: 15
          x-oapi-codegen-extra-tags:
            db: handle
            fake: '{lettern:10}'
        password:
          type: string
          format: password
          minLength: 12
          x-oapi-codegen-extra-tags:
            fake: '{password:true,true,true,true,false,12}'
      required:
        - handle
        - password

    AuthResponse:
      properties:
        tokens:
          $ref: '#/components/schemas/Tokens'
        user:
          $ref: '#/components/schemas/User'
      required:
        - tokens
        - user

    LikeStatus:
      properties:
        isLiked:
          type: boolean
          x-oapi-codegen-extra-tags:
            db: is_liked
      required:
        - isLiked

    Post:
      properties:
        id:
          type: integer
          x-go-name: ID
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: post_id
            fake: skip
        userID:
          type: integer
          x-go-type: uint
          x-go-json-ignore: true
          x-oapi-codegen-extra-tags:
            db: user_id
        content:
          type: string
          x-oapi-codegen-extra-tags:
            db: content
            fake: '{sentence}'
        likes:
          type: integer
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: likes
            fake: skip
        replies:
          type: integer
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: replies
            fake: skip
        createdAt:
          type: string
          format: date-time
          x-go-type: time.Time
          x-oapi-codegen-extra-tags:
            db: created_at
            fake: skip
        repliesTo:
          type: integer
          x-go-type: uint
          x-oapi-codegen-extra-tags:
            db: replies_to
            fake: skip
        status:
          $ref: '#/components/schemas/LikeStatus'
      required:
        - id
        - userID
        - content
        - likes
        - replies 
        - createdAt

    PostResponse:
      properties:
        data:
          $ref: '#/components/schemas/Post'
        user: 
          $ref: '#/components/schemas/User'
      required:
        - data
        - user

    NewPost:
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 280
          x-oapi-codegen-extra-tags:
            fake: '{sentence}'
      required:
        - content

    IDPaginationMeta:
      properties:
        oldest:
          type: integer
          x-go-type: uint
        newest:
          type: integer
          x-go-type: uint
      required:
        - oldest
        - newest
      x-go-type: PaginationMeta[uint]

    HandlePaginationMeta:
      properties:
        oldest:
          type: string
        newest:
          type: string
      required:
        - oldest
        - newest
      x-go-type: PaginationMeta[string]

    PostsResponse:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PostResponse'
        meta:
          $ref: '#/components/schemas/IDPaginationMeta'
      x-go-type: PaginatedResults[PostResponse, uint]
      required:
        - data

    Error:
      properties:
        message:
          type: string
        kind:
          type: string
          x-go-type: ErrorKind
      required:
        - message
